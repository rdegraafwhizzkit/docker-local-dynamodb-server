# To find all DynamoDBLocal versions do:
# aws s3 ls s3://dynamodb-local-frankfurt/release/com/amazonaws/DynamoDBLocal --recursive|grep "\.jar$"|rev|cut -d "/" -f 1|rev

# Delete image
# docker image rm "dynamodb:1.12.0"

# Build image
# docker build --no-cache -t "dynamodb:1.12.0" -f Dockerfile.dynamodb .

# Start a container from this image
# docker run -d -p 8000:8000 dynamodb:1.12.0

# Remove all stopped containers
# docker container prune

FROM   jdk8:latest

ARG    dynamodb_version=1.12.0
ARG    sqlite4java_version=1.0.392

COPY   pom.xml /opt/dynamodb/pom.xml
COPY   LocalDynamoDBServer.java /opt/dynamodb/src/main/java/LocalDynamoDBServer.java
RUN    cd /opt/dynamodb && \
       mvn -q clean package -Ddynamodb.version=$dynamodb_version -Dsqlite4java.version=$sqlite4java_version && \
       mvn -q dependency:build-classpath -Dmdep.outputFile=classpath -Ddynamodb.version=$dynamodb_version -Dsqlite4java.version=$sqlite4java_version && \
       cp -f target/*jar ./ && \
       rm -rf target
ENV    dynamodb_version=$dynamodb_version
ENV    sqlite4java_version=$sqlite4java_version
CMD    cd /opt/dynamodb && java -cp "local-dynamodb-server-${dynamodb_version}.jar:$(cat classpath)" \
       -Dsqlite4java.library.path=/root/.m2/repository/com/almworks/sqlite4java/libsqlite4java-linux-amd64/${sqlite4java_version}/ \
       LocalDynamoDBServer \
       -sharedDb \
       -optimizeDbBeforeStartup \
       -dbPath ./
